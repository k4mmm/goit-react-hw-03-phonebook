{"version":3,"sources":["Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/ContactForm/ContactForm.styled.jsx","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.styled.jsx","Components/ContactList/ContactList.jsx","App.styled.jsx","App.jsx","index.js"],"names":["FilterInput","styled","input","Label","label","Filter","filter","change","type","value","onChange","name","placeholder","Form","form","Input","ButtonAdd","button","ContactForm","state","number","reset","setState","inputChange","e","currentTarget","addContact","preventDefault","contactData","id","uuidv4","props","submit","this","onSubmit","pattern","title","required","Component","ContactItem","li","ButtonDelete","List","ol","ContactList","deleteContact","visibleContacts","map","contact","onClick","PhonebookSection","div","MainTitle","h1","Title","h2","Phonebook","contacts","data","prevState","find","alert","normalizedFilter","toLowerCase","item","includes","localStorage","setItem","JSON","stringify","localContacts","parse","getItem","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.e518a89c.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const FilterInput = styled.input`\n  margin-top: 10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  width: 300px;\n`;\n","import PropTypes from \"prop-types\";\n\nimport { FilterInput, Label } from \"./Filter.styled\";\n\nexport const Filter = ({ filter, change }) => {\n  return (\n    <Label>\n      Find contact by name\n      <FilterInput\n        type=\"text\"\n        value={filter}\n        onChange={change}\n        name=\"filter\"\n        placeholder=\"Enter contact name\"\n      />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  change: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  height: auto;\n  border: 1px solid black;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  margin: 10px 20px;\n`;\n\nexport const ButtonAdd = styled.button`\n  margin-bottom: 10px;\n  width: 50%;\n  align-self: center;\n  background-color: #46ec8b;\n  border: 1px solid #46ec8b;\n  border-radius: 5px;\n  &:hover,\n  &:active {\n    background-color: #7171bd;\n    border: 1px solid black;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  }\n`;\n","import { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport { Form, Input, Label, ButtonAdd } from \"./ContactForm.styled\";\n\nexport default class ContactForm extends Component {\n  state = { name: \"\", number: \"\" };\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  inputChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  addContact = (e) => {\n    const { name, number } = this.state;\n    e.preventDefault();\n    let id = uuidv4();\n    const contactData = {\n      name,\n      id,\n      number,\n    };\n    this.props.submit(contactData);\n    this.reset();\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <Form onSubmit={this.addContact}>\n        <Label>\n          Name:\n          <Input\n            type=\"text\"\n            name=\"name\"\n            onChange={this.inputChange}\n            value={name}\n            placeholder=\"New contact name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </Label>\n        <Label>\n          Tel:\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            placeholder=\"New contact number\"\n            onChange={this.inputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </Label>\n        <ButtonAdd type=\"submit\">Add contact</ButtonAdd>\n      </Form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  Submit: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const ContactItem = styled.li``;\n\nexport const ButtonDelete = styled.button`\n  background-color: #46ec8b;\n  border: 1px solid #46ec8b;\n  border-radius: 5px;\n  margin-left: 10px;\n  &:hover,\n  &:active {\n    background-color: #7171bd;\n    border: 1px solid black;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const List = styled.ol``;\n","import PropTypes from \"prop-types\";\nimport { ButtonDelete, ContactItem, List } from \"./ContactList.styled\";\n\nexport const ContactList = ({ deleteContact, visibleContacts }) => {\n  return (\n    <List>\n      {visibleContacts.map((contact) => {\n        return (\n          <ContactItem key={contact.id}>\n            {contact.name} : {contact.number}\n            <ButtonDelete\n              type=\"submit\"\n              onClick={() => {\n                deleteContact(contact);\n              }}\n            >\n              Delete\n            </ButtonDelete>\n          </ContactItem>\n        );\n      })}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  visibleContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  deleteContact: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const PhonebookSection = styled.div`\n  margin-left: 20px;\n`;\nexport const MainTitle = styled.h1`\n  text-transform: uppercase;\n  font-size: 24px;\n`;\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  font-size: 18px;\n`;\n","import { Component } from \"react\";\nimport { Filter } from \"./Components/Filter/Filter\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport { ContactList } from \"./Components/ContactList/ContactList\";\nimport { MainTitle, Title, PhonebookSection } from \"./App.styled\";\n\nclass Phonebook extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidUpdate(prevState) {\n    const prevContacts = prevState.contacts;\n    const newContacts = this.state.contacts;\n\n    if (prevContacts !== newContacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const localContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    localContacts\n      ? this.setState({ contacts: localContacts })\n      : this.setState({ contacts: [] });\n  }\n\n  deleteContact = (data) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== data.id),\n    }));\n  };\n\n  addContact = (data) => {\n    const { contacts } = this.state;\n    const findContact = contacts.find((contact) => {\n      return contact.name === data.name;\n    });\n\n    !findContact\n      ? this.setState((prevState) => ({\n          contacts: [data, ...prevState.contacts],\n        }))\n      : alert(`${data.name} is already in contact`);\n  };\n\n  inputChange = (e) => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n  };\n\n  visibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((item) =>\n      item.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  render() {\n    return (\n      <PhonebookSection>\n        <MainTitle>Phonebook</MainTitle>\n\n        <ContactForm submit={this.addContact} />\n        <Title>Contacts</Title>\n        <Filter filter={this.state.filter} change={this.inputChange} />\n        <ContactList\n          deleteContact={this.deleteContact}\n          visibleContacts={this.visibleContacts()}\n        />\n      </PhonebookSection>\n    );\n  }\n}\n\nexport default Phonebook;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}